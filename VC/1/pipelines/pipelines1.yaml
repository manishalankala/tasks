trigger:
  branches:
    include:
      - master
      - feature/*

pool:
  vmImage: ubuntu-latest

variables:
  vmImageName: 'ubuntu-latest'
  IMAGE_TAG: '$(Build.BuildId)'
  AzureSubscription: 'AzureServiceConnection' # Name of the Service Connection


####################
## Stage - build
#####################



stages:
- stage: Build
  displayName: Build stage
  jobs: 
  - job: Build-job
   steps:
   - task: Docker@2
     displayName: "Login to ACR"
     inputs:
       containerRegistry: 'ACR01'
       command: 'login'
   - task: AzureKeyVault@1
     displayName: 'Get Credentials'
     inputs:
       azureSubscription: 'XXXXXXXXXX'   ## $(ServiceConnection) or [Subscription Name]([Subscription ID])
       KeyVaultName: 'vault01'
       SecretsFilter: 'MySecret'
       RunAsPreJob: false
   - task: Docker@2
     displayName: Build an image
     inputs:
       containerRegistry: 'ACR01'
       repository: 'app'
       command: 'buildAndPush'
       Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
       tags: |
         1.0.$(Build.BuildId)
         latest



####################
## Stage - build - Alternative
#####################


#- task: Docker@2
#  displayName: "Docker Build"
#  inputs:
#    containerRegistry: 'ACR01'
#    repository: 'organizationname/reponamefrontend'
#    command: 'build'
#    Dockerfile: './Dockerfile'
#    buildContext: '.'


#- task: Docker@2
#  displayName: "Docker Push"
#  inputs:
#    containerRegistry: 'ACR01'
#    repository: 'organizationname/reponame'
#    command: 'push'

#- task: DownloadPipelineArtifact@2
#  displayName: Download Pipeline artifacts
# inputs:
#  buildType: 'current'
#  artifactName: 'manifests-docker'
#  itemPattern: |
#            Dockerfile
#  targetPath: '$(Pipeline.Workspace)/manifests-docker'





########################
## K8s config
########################


- stage: mid-stage
  displayName: mid-stage
  dependsOn: Build
  jobs: 
  - job: mid-job
   steps:
   - task: Bash@3
     displayName: "Set tag version in K8S configuration"
     inputs:
       targetType: 'inline'
       script: 'sed -i "s/\:latest/\:$(Build.BuildId)/g; s/\:fixed-latest/\:latest/g" $(System.DefaultWorkingDirectory)/k8s/dev-deployment.yaml'
   - task: Bash@3
     displayName: "Set tag version in K8S configuration"
     inputs:
       targetType: 'inline'
       script: 'sed -i "s/\:latest/\:$(Build.BuildId)/g; s/\:fixed-latest/\:latest/g" $(System.DefaultWorkingDirectory)/k8s/test-deployment.yaml'
  - task: Bash@3
    displayName: "Set tag version in K8S configuration"
    inputs:
      targetType: 'inline'
      script: 'sed -i "s/\:latest/\:$(Build.BuildId)/g; s/\:fixed-latest/\:latest/g" $(System.DefaultWorkingDirectory)/k8s/prod-deployment.yaml'


########################
## Publish manifest as Artifact
########################

#- task: DownloadPipelineArtifact@2
#  inputs:
#    buildType: 'current'
#    artifactName: 'manifests'
#    targetPath: '$(Pipeline.Workspace)/manifests'


  - task: CopyFiles@2
    displayName: "Copy Kubernetes Manifest"
    inputs:
      sourceFolder: $(System.DefaultWorkingDirectory)/k8s/
      contents: '**'
      targetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    displayName: "Publish Artifact"
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'artifact'
      publishLocation: 'Container'


########################
## K8s Manifest
########################

- stage: Deploy
  displayName: Deploy stage
  dependsOn: mid-stage
  jobs:
  - job: Deploy-job
   steps:
   
   - task: AzureKeyVault@1
     displayName: Fetch secrets from Azure Key vault
     inputs:
       azureSubscription: 'XXXXXXXX'
       KeyVaultName: 'vault02'
       SecretsFilter: '*'
   
   - task: KubernetesManifest@0
     displayName: "k8s manifest"
     environment: 'dev.default'          ##Target a specific resource within an environment from deployment job
     inputs:
       action: 'deploy'
       kubernetesServiceConnection: 'clusterdev-sc'
       namespace: 'default'
       manifests: 'k8s/dev-deployment.yaml'
   - task: KubernetesManifest@0
     displayName: "k8s manifest"
     environment: 'test.default'        ##Target a specific resource within an environment from deployment job
     inputs:
       action: 'deploy'
       kubernetesServiceConnection: 'clustertest-sc'
       namespace: 'default'
       manifests: 'k8s/test-deployment.yaml'
    
  - task: KubernetesManifest@0
    displayName: "k8s manifest"
    environment: 'test.default'        ##Target a specific resource within an environment from deployment job
    inputs:
      action: 'deploy'
      kubernetesServiceConnection: 'clusterprod-sc'
      namespace: 'default'
      manifests: 'k8s/prod-deployment.yaml'
